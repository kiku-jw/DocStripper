#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ DocStripper –Ω–∞ GitHub

echo "üöÄ DocStripper - –°–∫—Ä–∏–ø—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
echo "=================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå –û—à–∏–±–∫–∞: Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
    exit 1
fi

echo "‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è remote
if git remote get-url origin > /dev/null 2>&1; then
    REMOTE_URL=$(git remote get-url origin)
    echo "üì¶ –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: $REMOTE_URL"
    echo ""
    read -p "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π remote? (y/n): " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É remote..."
    else
        git remote remove origin
    fi
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if ! git remote get-url origin > /dev/null 2>&1; then
    echo "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub:"
    read -p "GitHub username: " GITHUB_USERNAME
    read -p "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è [DocStripper]: " REPO_NAME
    REPO_NAME=${REPO_NAME:-DocStripper}
    
    echo ""
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
    echo "1) HTTPS (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
    echo "2) SSH"
    read -p "–í—ã–±–æ—Ä [1]: " METHOD
    METHOD=${METHOD:-1}
    
    if [ "$METHOD" = "1" ]; then
        REMOTE_URL="https://github.com/$GITHUB_USERNAME/$REPO_NAME.git"
    else
        REMOTE_URL="git@github.com:$GITHUB_USERNAME/$REPO_NAME.git"
    fi
    
    echo ""
    echo "–î–æ–±–∞–≤–ª—è–µ–º remote: $REMOTE_URL"
    git remote add origin "$REMOTE_URL"
fi

# –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –≤ main –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "main" ]; then
    echo "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤–µ—Ç–∫—É $CURRENT_BRANCH –≤ main..."
    git branch -M main
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo ""
echo "üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:"
git status --short

echo ""
echo "–ì–æ—Ç–æ–≤—ã –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏? –ë—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  git push -u origin main"
echo ""
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " -n 1 -r
echo ""

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ GitHub..."
    git push -u origin main
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!"
        echo ""
        REMOTE_URL=$(git remote get-url origin)
        REPO_URL=$(echo "$REMOTE_URL" | sed 's/\.git$//')
        echo "üîó –û—Ç–∫—Ä–æ–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_URL"
        echo ""
        echo "–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ª–∏–∑ v1.0.0 –Ω–∞ GitHub"
        echo "  –ü–µ—Ä–µ–π–¥–∏—Ç–µ: $REPO_URL/releases/new"
    else
        echo ""
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
else
    echo "–û—Ç–º–µ–Ω–µ–Ω–æ."
fi

